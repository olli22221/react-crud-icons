{"version":3,"sources":["Footer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","role","target","rel","href","copyright","substring","sizes","App","class","height","viewBox","version","width","fillRule","d","keys","sort","map","ico","name","tooltip","text","theme","size","disabled","join","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAwCeA,EAlCA,kBACb,sBAAKC,UAAU,SAASC,KAAK,cAA7B,UACE,gCACE,mBACED,UAAU,YACVE,OAAO,KACPC,IAAI,sBACJC,KAAK,oDAJP,kCADF,mCASoC,qBAAKJ,UAAU,QAAf,uBAEpC,wBACA,wCACUK,IAAUC,UAAU,EAAG,GAC/B,mBAAGF,KAAK,+BAA+BF,OAAO,KAA9C,qCCbAK,G,YAAQ,CAAC,OAAQ,QAAS,SAAU,QAAS,MAAO,SA6M3CC,MA3Mf,WACE,OACE,qCACE,qBAAKR,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,mCACE,mDACmB,sBAAMA,UAAU,UAAhB,uBAGnB,mBACES,MAAM,SACNL,KAAK,gDAFP,SAIE,qBACEM,OAAO,KACPC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACN,cAAY,OALd,SAOE,sBACEC,SAAS,UACTC,EAAE,okBAKV,oCACE,kJAEwD,IACtD,mBACEb,OAAO,SACPE,KAAK,kCACLD,IAAI,sBAHN,mCAHF,QAaA,uDACyB,IACvB,mBAAGC,KAAK,gDAAR,8CAMJ,oCACE,6CACA,qBAAKJ,UAAU,eAAf,SACGgB,OAAKC,OAAOC,KAAI,SAACC,GAAD,OACf,gCACE,cAAC,IAAD,CAAMC,KAAMD,EAAKE,QAASF,EAAKG,KAAK,QACpC,+BAAOH,MAFCA,QAMd,4CACA,qBAAKnB,UAAU,oBAAf,SACGgB,OAAKE,KAAI,SAACC,GAAD,OACR,gCACE,cAAC,IAAD,CAAMI,MAAM,OAAOH,KAAMD,EAAKE,QAASF,EAAKK,KAAK,WACjD,+BAAOL,MAFCA,WAQhB,oCACE,uCACA,sBAAKnB,UAAU,QAAf,UACGO,EAAMW,KAAI,SAACM,GAAD,OACT,8BACE,cAAC,IAAD,CAAMJ,KAAK,OAAOI,KAAMA,EAAMD,MAAM,QAAQF,QAASG,KAD7CA,MAIZ,8BACE,cAAC,IAAD,CACEC,UAAU,EACVL,KAAK,OACLI,KAAK,OACLD,MAAM,QACNF,QAAQ,4BAMhB,oCACE,2CACA,4BAAIL,OAAKC,OAAOS,KAAK,WAGvB,oCACE,8CACA,iEACmC,IACjC,mBAAGtB,KAAK,iDAAR,iBAFF,OAIA,uEAEA,uJAMF,oCACE,uCACA,0UAQA,8DAEE,uBAFF,uCAIE,uBACA,uBALF,uEAQE,uBACA,uBATF,yCAUyC,IACvC,uBACA,sBAAKJ,UAAU,UAAf,UACG,aACD,sBAAKA,UAAU,UAAf,qBAEE,sBAAKA,UAAU,UAAf,UACG,IADH,OAEE,uBACA,sBAAKA,UAAU,UAAf,0BAEE,uBAFF,mBAIE,uBAJF,kBAME,uBANF,kBAQE,uBARF,aASa,IATb,gBAS+B,OAE9B,QAhBL,QAoBC,OAEF,IApCH,IAoCQ,0BAGR,oIAMF,oCACE,yCACA,8BACE,mBAAGI,KAAK,gDAAR,8BAEK,IAHP,sBAIsB,IACpB,mBAAGA,KAAK,oEAAR,yBALF,OAUA,8CAEE,mBAAGA,KAAK,gDAAR,oBAFF,OAKA,yEAEE,mBAAGA,KAAK,uDAAR,oBAFF,OAjBF,gDAwBgD,IAC9C,mBAAGA,KAAK,oDAAR,kCAzBF,YAiCJ,cAAC,EAAD,QCrMcuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.2546970a.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { copyright } from \"../package.json\";\n\nimport \"./Footer.scss\";\n\nconst Footer = () => (\n  <div className=\"Footer\" role=\"contentinfo\">\n    <div>\n      <a\n        className=\"copyright\"\n        target=\"ui\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/evoluteur/evolutility-ui-react\"\n      >\n        Evolutility-UI-React\n      </a>\n      &nbsp; is made in California with <div className=\"heart\">♥</div>\n    </div>\n    <div></div>\n    <div>\n      &copy; {copyright.substring(4, 9)}\n      <a href=\"https://evoluteur.github.io/\" target=\"og\">\n        Olivier Giulieri\n      </a>\n    </div>\n  </div>\n);\n/*\n            <div className=\"Footer-links\">\n            \tEvolutility{' = '}\n            \t<a target=\"m\" rel=\"noopener noreferrer\" href=\"https://github.com/evoluteur/evolutility-models\">Models</a>\n                {' + '}\n            \t<a target=\"ui\" rel=\"noopener noreferrer\" href=\"https://github.com/evoluteur/evolutility-ui-react\">UI</a>\n                {' + '}\n            \t<a target=\"db\" rel=\"noopener noreferrer\" href=\"https://github.com/evoluteur/evolutility-server-node\">Server</a>\n            </div>\n\n    */\n\nexport default Footer;\n","import React from \"react\";\n\nimport Icon, { keys } from \"react-crud-icons\";\n\nimport Footer from \"./Footer\";\n\nimport \"../node_modules/react-crud-icons/dist/css/react-crud-icons.css\";\nimport \"./App.scss\";\n\nconst sizes = [\"tiny\", \"small\", \"medium\", \"large\", \"big\", \"huge\"];\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"evo-home\">\n          <header>\n            <h1>\n              React-CRUD-Icons <span className=\"version\">v1.1.0</span>\n            </h1>\n\n            <a\n              class=\"github\"\n              href=\"https://github.com/evoluteur/react-crud-icons\"\n            >\n              <svg\n                height=\"32\"\n                viewBox=\"0 0 16 16\"\n                version=\"1.1\"\n                width=\"32\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n                ></path>\n              </svg>\n            </a>\n          </header>\n          <section>\n            <p>\n              Set of 57 SVG icons for CRUD (Create, Read, Update, Delete)\n              applications (hand-picked among thousands of icons at{\" \"}\n              <a\n                target=\"_blank\"\n                href=\"https://materialdesignicons.com\"\n                rel=\"noopener noreferrer\"\n              >\n                Material Design Icons\n              </a>\n              ).\n            </p>\n\n            <p>\n              Open Source at GitHub:{\" \"}\n              <a href=\"https://github.com/evoluteur/react-crud-icons\">\n                evoluteur/react-crud-icons\n              </a>\n            </p>\n          </section>\n\n          <section>\n            <h3>Light theme</h3>\n            <div className=\"icons-notext\">\n              {keys.sort().map((ico) => (\n                <div key={ico}>\n                  <Icon name={ico} tooltip={ico} text=\"aaa\" />\n                  <span>{ico}</span>\n                </div>\n              ))}\n            </div>\n            <h3>Dark theme</h3>\n            <div className=\"icons-notext dark\">\n              {keys.map((ico) => (\n                <div key={ico}>\n                  <Icon theme=\"dark\" name={ico} tooltip={ico} size=\"medium\" />\n                  <span>{ico}</span>\n                </div>\n              ))}\n            </div>\n          </section>\n\n          <section>\n            <h3>Sizes</h3>\n            <div className=\"sizes\">\n              {sizes.map((size) => (\n                <div key={size}>\n                  <Icon name=\"apps\" size={size} theme=\"light\" tooltip={size} />\n                </div>\n              ))}\n              <div>\n                <Icon\n                  disabled={true}\n                  name=\"apps\"\n                  size=\"huge\"\n                  theme=\"light\"\n                  tooltip=\"huge & disabled\"\n                />\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h3>Icon Keys</h3>\n            <p>{keys.sort().join(\", \")}</p>\n          </section>\n\n          <section>\n            <h3>Installation</h3>\n            <p>\n              The package can be installed via{\" \"}\n              <a href=\"https://www.npmjs.com/package/react-crud-icons\">npm</a>:\n            </p>\n            <code>npm install react-crud-icons --save</code>\n\n            <p>\n              You’ll need to install React and PropTypes separately since those\n              dependencies aren't included in the package.\n            </p>\n          </section>\n\n          <section>\n            <h3>Usage</h3>\n            <p>\n              Below is a simple example of how to use the component in a React\n              view. You will also need to include the CSS file from this package\n              (or provide your own). The example below shows how to include the\n              CSS from this package if your build system supports requiring CSS\n              files (Webpack is one that does).\n            </p>\n\n            <code>\n              import React from \"react\";\n              <br />\n              import Icon from \"react-crud-icons\";\n              <br />\n              <br />\n              import\n              \"../node_modules/react-crud-icons/dist/react-crud-icons.css\";\n              <br />\n              <br />\n              class Example extends React.Component {\"{\"}\n              <br />\n              <div className=\"codeTab\">\n                {\"render() {\"}\n                <div className=\"codeTab\">\n                  return (\n                  <div className=\"codeTab\">\n                    {\"<\"}Icon\n                    <br />\n                    <div className=\"codeTab\">\n                      name = \"edit\"\n                      <br />\n                      tooltip = \"Edit\"\n                      <br />\n                      theme = \"light\"\n                      <br />\n                      size = \"medium\"\n                      <br />\n                      onClick = {\"{\"} doSomething {\"}\"}\n                    </div>\n                    {\"/>\"}\n                  </div>\n                  );\n                </div>\n                {\"}\"}\n              </div>\n              {\"}\"} <br />\n            </code>\n\n            <p>\n              Note: Icons only take focus on tab when the \"onClick\" property is\n              set and they are not disabled.\n            </p>\n          </section>\n\n          <section>\n            <h3>License</h3>\n            <p>\n              <a href=\"https://github.com/evoluteur/react-crud-icons\">\n                React-CRUD-Icons\n              </a>{\" \"}\n              is Open Source with{\" \"}\n              <a href=\"https://github.com/evoluteur/react-crud-icons/blob/master/LICENSE\">\n                MIT License\n              </a>\n              .\n            </p>\n            <p>\n              Hosted at&nbsp;\n              <a href=\"https://github.com/evoluteur/react-crud-icons\">GitHub</a>\n              .\n            </p>\n            <p>\n              Suggest a feature or report a bug at&nbsp;\n              <a href=\"https://github.com/evoluteur/react-crud-icons/issues\">\n                GitHub\n              </a>\n              .\n            </p>\n            Note: React-CRUD-Icons was originaly made for{\" \"}\n            <a href=\"https://github.com/evoluteur/evolutility-ui-react\">\n              Evolutility-UI-React\n            </a>\n            .\n          </section>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}